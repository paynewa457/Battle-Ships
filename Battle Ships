import java.util.Scanner;

class ShipSpace {
    int x;
    int y;

    public ShipSpace(int x, int y) {
        this.x = x;
        this.y = y;
    }
}

public class Game {
    public static void main(String[] args) {
        Scanner keyboard = new Scanner(System.in);
        String[][] board1 = new String[10][10];
        ShipSpace[] shipSpaces;

        System.out.println("To place the tiles you need to type the coordinates of one section of your ship,");
        System.out.println("you will then have to say how many squares long the ship is and lastly what its orientation is");

        System.out.println("Enter the starting x coordinate of the ship (1-10)");
        int ship1X = keyboard.nextInt();
        System.out.println("Enter the starting y coordinate of the ship (1-10)");
        int ship1Y = keyboard.nextInt();
        System.out.println("Enter the length of the ship");
        int shipLength = keyboard.nextInt();
        System.out.println("Enter the orientation of the ship (h for horizontal, v for vertical)");
        char orientation = keyboard.next().charAt(0);

        // Initialize the array to store ship positions
        shipSpaces = new ShipSpace[shipLength];

        // Storing ship positions in the ShipSpace array
        for (int i = 0; i < shipLength; i++) {
            if (orientation == 'h') {
                shipSpaces[i] = new ShipSpace(ship1X + i, ship1Y);
            } else if (orientation == 'v') {
                shipSpaces[i] = new ShipSpace(ship1X, ship1Y + i);
            }
        }

        int guessX = -1;
        int guessY = -1;
        boolean shipSunk = false;
        player1(board1, shipSpaces, guessX, guessY, keyboard, shipSunk);
    }

    static void player1(String[][] board1, ShipSpace[] shipSpaces, int guessX, int guessY, Scanner keyboard, boolean shipSunk) {
        for (int i = 0; i < 10; i++) {
            for (int j = 0; j < 10; j++) {
                board1[i][j] = ". ";
            }
        }

        while (!shipSunk) {
            // Print column labels (A-J)
            System.out.print("  ");
            for (char c = 'A'; c <= 'J'; c++) {
                System.out.print(c + " ");
            }
            System.out.println();

            // Print the board with row labels (1-10)
            for (int y = 0; y < 10; y++) {
                if (y == 9) {
                    System.out.print((y + 1)); // Print 10 without an additional space
                } else {
                    System.out.print((y + 1) + " "); // Print 1-9 with an additional space
                }
                for (int x = 0; x < 10; x++) {
                    System.out.print(board1[x][y]);
                }
                System.out.println();
            }

            System.out.println("Enter the x position (1-10)");
            guessX = keyboard.nextInt();
            System.out.println("Enter the y position (1-10)");
            guessY = keyboard.nextInt();

            // Validate input
            if (guessX < 1 || guessX > 10 || guessY < 1 || guessY > 10) {
                System.out.println("Invalid coordinates. Please enter values between 1 and 10.");
                continue;
            }

            boolean hit = false;
            // Check if the guessed position matches any ship position
            for (ShipSpace ship : shipSpaces) {
                if (guessX == ship.x && guessY == ship.y) {
                    System.out.println("hit");
                    board1[guessX - 1][guessY - 1] = "o ";
                    hit = true;
                }
            }

            if (hit) {
                boolean allSunk = true;
                // Check if all ships are sunk
                for (ShipSpace ship : shipSpaces) {
                    if (board1[ship.x - 1][ship.y - 1].equals(". ")) {
                        allSunk = false;
                    }
                }
                if (allSunk) {
                    System.out.println("All ships sunk!");
                    shipSunk = true;
                }
            } else {
                System.out.println("miss");
                board1[guessX - 1][guessY - 1] = "x ";
            }
        }
    }
}
